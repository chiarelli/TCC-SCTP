version: "3.0"

services:

  api:
    build:
      context: ../..
      dockerfile: ./docker/dicid_dev/Dockerfile.nginx
    ports:
      - 3000:80
    depends_on:
      - border
    networks:
      - frontend
      - backend

  border:
    build:
      context: ../..
      dockerfile: ./docker/dicid_dev/Dockerfile
    image: dicid_dev
    env_file: .env
    expose:
      - 3000
    depends_on:
      - nats
    environment:
      SERVICES: border
    volumes:
      - ../../microservices:/app
    networks:
      backend:
        aliases:
          - borders

    stop_signal: SIGINT

  auth:
    build:
      context: ../..
      dockerfile: ./docker/dicid_dev/Dockerfile
    image: dicid_dev
    env_file: .env
    depends_on:
      - nats
      - mongo
    environment:
      SERVICES: auth
    volumes:
      - ../../microservices:/app
    networks:
      - backend
    stop_signal: SIGINT

  user:
    build:
      context: ../..
      dockerfile: ./docker/dicid_dev/Dockerfile
    image: dicid_dev
    env_file: .env
    environment:
      SERVICES: user
    depends_on:
      - nats
      - mongo
    volumes:
      - ../../microservices:/app
    networks:
      - backend
    stop_signal: SIGINT

  term:
    build:
      context: ../..
      dockerfile: ./docker/dicid_dev/Dockerfile
    image: dicid_dev
    env_file: .env
    environment:
      SERVICES: term
    depends_on:
      - nats
      - mongo
    volumes:
      - ../../microservices:/app
    networks:
      - backend
    stop_signal: SIGINT

  nats:
    image: nats
    networks:
      - backend

  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend
      - frontend

  # microservices:
  #   build:
  #     context: ../..
  #     dockerfile: ./docker/dicid_dev/Dockerfile
  #   env_file: .env
  #   environment:
  #     SERVICES: border|auth|user
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - nats
  #     - mongo
  #   volumes:
  #     - ../../microservices:/app
  #   stop_signal: SIGINT

volumes:
  mongodb_data:

networks:
  backend:
    driver: ipvlan
    internal: true
  frontend:
    internal: false